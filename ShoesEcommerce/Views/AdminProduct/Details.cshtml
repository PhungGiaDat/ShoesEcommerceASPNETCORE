@model ShoesEcommerce.Models.Products.Product
@{
    ViewData["Title"] = "Chi ti?t S?n ph?m";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    var variants = ViewBag.Variants as IEnumerable<ShoesEcommerce.ViewModels.Product.ProductVariantInfo>;
}

<div class="product-details">
    <div class="page-header bg-gradient-primary text-white rounded-3 mb-4 p-4">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <h2 class="page-title mb-2">
                    <i class="fas fa-cube me-2"></i>
                    Chi tiết Sản phẩm
                </h2>
                <p class="page-subtitle mb-0 opacity-75">Xem và quản lý thông tin chi tiết sản phẩm</p>
            </div>
            <div class="page-actions">
                <div class="btn-group" role="group">
                    <a asp-action="Index" class="btn btn-light btn-lg">
                        <i class="fas fa-arrow-left me-2"></i>
                        Quay lại
                    </a>
                    <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-outline-light btn-lg">
                        <i class="fas fa-edit me-2"></i>
                        Chỉnh sửa
                    </a>
                </div>
            </div>
        </div>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="fas fa-check-circle me-2"></i>
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="fas fa-exclamation-circle me-2"></i>
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <div class="row">
        <div class="col-lg-4 col-md-6 mb-4">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-header bg-primary text-white">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-info-circle me-2"></i>
                        Thông tin cơ bản
                    </h5>
                </div>
                <div class="card-body">
                    <div class="product-info">
                        <div class="info-item mb-3">
                            <label class="info-label">ID Sản phẩm:</label>
                            <span class="info-value badge bg-light text-dark">#@Model.Id</span>
                        </div>

                        <div class="info-item mb-3">
                            <label class="info-label">Tên sản phẩm:</label>
                            <h6 class="info-value mb-0">@Model.Name</h6>
                        </div>

                        <div class="info-item mb-3">
                            <label class="info-label">Mô tả:</label>
                            <p class="info-value mb-0">
                                @if (!string.IsNullOrEmpty(Model.Description))
                                {
                                    @Model.Description
                                }
                                else
                                {
                                    <em class="text-muted">Chưa có mô tả</em>
                                }
                            </p>
                        </div>

                        <div class="info-item mb-3">
                            <label class="info-label">Danh mục:</label>
                            <span class="info-value badge bg-success">
                                <i class="fas fa-tags me-1"></i>
                                @Model.Category?.Name
                            </span>
                        </div>

                        <div class="info-item mb-0">
                            <label class="info-label">Thương hiệu:</label>
                            <span class="info-value badge bg-info">
                                <i class="fas fa-award me-1"></i>
                                @Model.Brand?.Name
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-8 col-md-6 mb-4">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-header bg-success text-white">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-chart-bar me-2"></i>
                        Thống kê sản phẩm
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-3 col-6 mb-3">
                            <div class="stat-card bg-primary text-white rounded p-3 text-center">
                                <div class="stat-icon mb-2">
                                    <i class="fas fa-palette fa-2x"></i>
                                </div>
                                <h4 class="stat-number mb-1">@(variants?.Count() ?? 0)</h4>
                                <p class="stat-label mb-0">Phiên bản</p>
                            </div>
                        </div>
                        <div class="col-md-3 col-6 mb-3">
                            <div class="stat-card bg-success text-white rounded p-3 text-center">
                                <div class="stat-icon mb-2">
                                    <i class="fas fa-boxes fa-2x"></i>
                                </div>
                                <h4 class="stat-number mb-1">@(variants?.Sum(v => v.StockQuantity) ?? 0)</h4>
                                <p class="stat-label mb-0">Tồn kho</p>
                            </div>
                        </div>
                        <div class="col-md-3 col-6 mb-3">
                            <div class="stat-card bg-warning text-white rounded p-3 text-center">
                                <div class="stat-icon mb-2">
                                    <i class="fas fa-dollar-sign fa-2x"></i>
                                </div>
                                <h4 class="stat-number mb-1">
                                    @if (variants?.Any() == true)
                                    {
                                        <span>@variants.Min(v => v.Price).ToString("N0")</span>
                                    }
                                    else
                                    {
                                        <span>0</span>
                                    }
                                </h4>
                                <p class="stat-label mb-0">Giá thấp nhất</p>
                            </div>
                        </div>
                        <div class="col-md-3 col-6 mb-3">
                            <div class="stat-card bg-info text-white rounded p-3 text-center">
                                <div class="stat-icon mb-2">
                                    <i class="fas fa-star fa-2x"></i>
                                </div>
                                <h4 class="stat-number mb-1">
                                    @if (variants?.Any() == true)
                                    {
                                        <span>@variants.Max(v => v.Price).ToString("N0")</span>
                                    }
                                    else
                                    {
                                        <span>0</span>
                                    }
                                </h4>
                                <p class="stat-label mb-0">Giá cao nhất</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-12">
            <div class="card border-0 shadow-sm">
                <div class="card-header bg-white border-0 py-3">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="card-title mb-0">
                            <i class="fas fa-palette me-2 text-primary"></i>
                            Phiên bản sản phẩm
                            @if (variants?.Any() == true)
                            {
                                <span class="badge bg-primary ms-2">@variants.Count() tuỳ chọn</span>
                            }
                        </h5>
                        <div class="card-actions">
                            <a asp-action="CreateVariant" asp-route-productId="@Model.Id" class="btn btn-success btn-sm">
                                <i class="fas fa-plus me-1"></i>
                                Thêm phiên bản
                            </a>
                            <a asp-action="Variants" asp-route-id="@Model.Id" class="btn btn-outline-primary btn-sm">
                                <i class="fas fa-list me-1"></i>
                                Xem tất cả
                            </a>
                        </div>
                    </div>
                </div>
                <div class="card-body p-0">
                    @if (variants?.Any() == true)
                    {
                        <div class="variant-selection-demo p-4 bg-light border-bottom">
                            <h6 class="mb-3">
                                <i class="fas fa-eye me-2"></i>
                                Xem trước giao diện khách hàng
                            </h6>
                            <div class="customer-view-demo">
                                <div class="product-title mb-3">
                                    <h5>@Model.Name</h5>
                                    <div class="price-range">
                                        @if (variants.Any())
                                        {
                                            var minPrice = variants.Min(v => v.Price);
                                            var maxPrice = variants.Max(v => v.Price);
                                            if (minPrice == maxPrice)
                                            {
                                                <span class="price-single">@minPrice.ToString("N0") VNĐ</span>
                                            }
                                            else
                                            {
                                                <span class="price-range-text">@minPrice.ToString("N0") - @maxPrice.ToString("N0") VNĐ</span>
                                            }
                                        }
                                    </div>
                                </div>

                                <div class="variant-group mb-3">
                                    <label class="variant-label">Màu sắc:</label>
                                    <div class="color-options d-flex flex-wrap gap-2">
                                        @foreach (var color in variants.GroupBy(v => v.Color))
                                        {
                                            <div class="color-option" data-color="@color.Key">
                                                <div class="color-swatch" style="background-color: @GetColorCode(color.Key)"></div>
                                                <span class="color-name">@color.Key</span>
                                                <small class="color-count">(@color.Count() size@(color.Count() > 1 ? "s" : ""))</small>
                                            </div>
                                        }
                                    </div>
                                </div>

                                <div class="variant-group mb-3">
                                    <label class="variant-label">Kích thước:</label>
                                    <div class="size-options d-flex flex-wrap gap-2">
                                        @foreach (var size in variants.GroupBy(v => v.Size).OrderBy(g => g.Key))
                                        {
                                            var hasStock = size.Any(v => v.StockQuantity > 0);
                                            <div class="size-option @(hasStock ? "" : "out-of-stock")" data-size="@size.Key">
                                                <span class="size-name">@size.Key</span>
                                                @if (!hasStock)
                                                {
                                                    <small class="text-muted">(Hết hàng)</small>
                                                }
                                            </div>
                                        }
                                    </div>
                                </div>

                                <div class="selection-result">
                                    <small class="text-muted">
                                        <i class="fas fa-info-circle me-1"></i>
                                        Chọn màu sắc và kích thước để xem giá cụ thể
                                    </small>
                                </div>
                            </div>
                        </div>

                        <div class="table-responsive">
                            <table class="table table-hover mb-0">
                                <thead class="table-light">
                                    <tr>
                                        <th style="width: 60px;">Hình ảnh</th>
                                        <th>Màu sắc</th>
                                        <th>Kích thước</th>
                                        <th>Giá</th>
                                        <th>Tồn kho</th>
                                        <th>Trạng thái</th>
                                        <th>Xu hướng</th>
                                        <th style="width: 120px;">Thao tác</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var variant in variants.OrderBy(v => v.Color).ThenBy(v => v.Size))
                                    {
                                        <tr>
                                            <td>
                                                @if (!string.IsNullOrEmpty(variant.ImageUrl))
                                                {
                                                    <img src="@variant.ImageUrl" alt="@variant.Color @variant.Size"
                                                         class="variant-image rounded" style="width: 50px; height: 50px; object-fit: cover;"
                                                         onerror="this.src='/images/no-image.png';">
                                                }
                                                else
                                                {
                                                    <div class="variant-placeholder rounded d-flex align-items-center justify-content-center bg-light"
                                                         style="width: 50px; height: 50px;">
                                                        <i class="fas fa-image text-muted"></i>
                                                    </div>
                                                }
                                            </td>
                                            <td>
                                                <span class="color-badge">
                                                    <i class="fas fa-circle me-1" style="color: @GetColorCode(variant.Color)"></i>
                                                    @variant.Color
                                                </span>
                                            </td>
                                            <td>
                                                <span class="badge bg-secondary">@variant.Size</span>
                                            </td>
                                            <td>
                                                <div class="price-info">
                                                    <strong class="text-success">@variant.Price.ToString("N0") VNĐ</strong>
                                                    @{
                                                        var avgPrice = variants.Average(v => v.Price);
                                                        var priceDiff = variant.Price - avgPrice;
                                                    }
                                                    @if (Math.Abs(priceDiff) > 1000)
                                                    {
                                                        <small class="d-block @(priceDiff > 0 ? "text-warning" : "text-info")">
                                                            @(priceDiff > 0 ? "+" : "")@priceDiff.ToString("N0") so với TB
                                                        </small>
                                                    }
                                                </div>
                                            </td>
                                            <td>
                                                @if (variant.StockQuantity > 0)
                                                {
                                                    <span class="badge bg-success">
                                                        <i class="fas fa-check me-1"></i>
                                                        @variant.StockQuantity
                                                    </span>
                                                }
                                                else
                                                {
                                                    <span class="badge bg-danger">
                                                        <i class="fas fa-times me-1"></i>
                                                        Hết hàng
                                                    </span>
                                                }
                                            </td>
                                            <td>
                                                @if (variant.StockQuantity > 10)
                                                {
                                                    <span class="badge bg-success">Sẵn sàng</span>
                                                }
                                                else if (variant.StockQuantity > 0)
                                                {
                                                    <span class="badge bg-warning">Sắp hết</span>
                                                }
                                                else
                                                {
                                                    <span class="badge bg-danger">Hết hàng</span>
                                                }
                                            </td>
                                            <td>
                                                @{
                                                    var isHighPrice = variant.Price > variants.Average(v => v.Price);
                                                    var hasStock = variant.StockQuantity > 0;
                                                }
                                                @if (isHighPrice && hasStock)
                                                {
                                                    <span class="badge bg-warning">
                                                        <i class="fas fa-crown me-1"></i>
                                                        Premium
                                                    </span>
                                                }
                                                else if (!isHighPrice && hasStock)
                                                {
                                                    <span class="badge bg-info">
                                                        <i class="fas fa-fire me-1"></i>
                                                        Phổ biến
                                                    </span>
                                                }
                                                else
                                                {
                                                    <span class="badge bg-secondary">--</span>
                                                }
                                            </td>
                                            <td>
                                                <div class="btn-group" role="group">
                                                    <a href="@Url.Action("EditVariant", new { id = variant.Id })"
                                                       class="btn btn-outline-primary btn-sm"
                                                       title="Chỉnh sửa">
                                                        <i class="fas fa-edit"></i>
                                                    </a>
                                                    <a href="@Url.Action("DeleteVariant", new { id = variant.Id })"
                                                       class="btn btn-outline-danger btn-sm"
                                                       title="Xoá"
                                                       onclick="return confirm('Bạn có chắc chắn muốn xoá phiên bản này?')">
                                                        <i class="fas fa-trash"></i>
                                                    </a>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                        <div class="variant-analysis p-3 bg-light">
                            <div class="row">
                                <div class="col-md-4">
                                    <h6>Phân tích màu sắc</h6>
                                    @foreach (var colorGroup in variants.GroupBy(v => v.Color).OrderByDescending(g => g.Sum(v => v.StockQuantity)))
                                    {
                                        <div class="analysis-item">
                                            <span class="color-dot" style="background-color: @GetColorCode(colorGroup.Key)"></span>
                                            <strong>@colorGroup.Key</strong>: @colorGroup.Sum(v => v.StockQuantity) items
                                        </div>
                                    }
                                </div>
                                <div class="col-md-4">
                                    <h6>Phân tích kích thước</h6>
                                    @foreach (var sizeGroup in variants.GroupBy(v => v.Size).OrderBy(g => g.Key))
                                    {
                                        <div class="analysis-item">
                                            <strong>Size @sizeGroup.Key</strong>: @sizeGroup.Sum(v => v.StockQuantity) items
                                        </div>
                                    }
                                </div>
                                <div class="col-md-4">
                                    <h6>Phân tích giá</h6>
                                    <div class="analysis-item">
                                        <strong>Giá trung bình:</strong> @variants.Average(v => v.Price).ToString("N0") VNĐ
                                    </div>
                                    <div class="analysis-item">
                                        <strong>Khoảng giá:</strong> @(variants.Max(v => v.Price) - variants.Min(v => v.Price)).ToString("N0") VNĐ
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <div class="empty-state">
                                <i class="fas fa-palette fa-4x text-muted mb-3"></i>
                                <h4>Chưa có phiên bản nào</h4>
                                <p class="text-muted mb-4">
                                    Sản phẩm này chưa có phiên bản nào. Hãy thêm phiên bản đầu tiên với giá cụ thể, màu sắc, kích thước và hình ảnh.
                                </p>

                                <div class="alert alert-info mx-auto" style="max-width: 600px;">
                                    <h6><i class="fas fa-lightbulb me-2"></i>Thực hành tốt nhất</h6>
                                    <ul class="text-start mb-0">
                                        <li><strong>Đa dạng tuỳ chọn:</strong> Thêm nhiều màu sắc và kích thước</li>
                                        <li><strong>Giá linh hoạt:</strong> Đặt giá khác nhau cho từng phiên bản</li>
                                        <li><strong>Hình ảnh chất lượng:</strong> Mỗi màu nên có ảnh riêng</li>
                                        <li><strong>Quản lý tồn kho:</strong> Theo dõi từng phiên bản riêng biệt</li>
                                    </ul>
                                </div>

                                <div class="d-flex gap-2 justify-content-center">
                                    <a asp-action="CreateVariant" asp-route-productId="@Model.Id" class="btn btn-success btn-lg">
                                        <i class="fas fa-plus me-2"></i>
                                        Thêm phiên bản đầu tiên
                                    </a>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="row mt-4">
        <div class="col-12">
            <div class="card border-0 shadow-sm">
                <div class="card-header bg-light">
                    <h6 class="card-title mb-0">
                        <i class="fas fa-bolt me-2"></i>
                        Thao tác nhanh
                    </h6>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-lg-2 col-md-4 col-6 mb-2">
                            <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-outline-primary w-100">
                                <i class="fas fa-edit me-2"></i>
                                Chỉnh sửa
                            </a>
                        </div>
                        <div class="col-lg-2 col-md-4 col-6 mb-2">
                            <a asp-action="CreateVariant" asp-route-productId="@Model.Id" class="btn btn-outline-success w-100">
                                <i class="fas fa-plus me-2"></i>
                                Thêm phiên bản
                            </a>
                        </div>
                        <div class="col-lg-2 col-md-4 col-6 mb-2">
                            <a asp-action="Variants" asp-route-id="@Model.Id" class="btn btn-outline-info w-100">
                                <i class="fas fa-list me-2"></i>
                                Tất cả phiên bản
                            </a>
                        </div>
                        <div class="col-lg-2 col-md-4 col-6 mb-2">
                            <button type="button" class="btn btn-outline-warning w-100" onclick="exportProduct()">
                                <i class="fas fa-download me-2"></i>
                                Xuất dữ liệu
                            </button>
                        </div>
                        <div class="col-lg-2 col-md-4 col-6 mb-2">
                            <a asp-action="Index" asp-route-categoryId="@Model.CategoryId" class="btn btn-outline-secondary w-100">
                                <i class="fas fa-tags me-2"></i>
                                Cùng danh mục
                            </a>
                        </div>
                        <div class="col-lg-2 col-md-4 col-6 mb-2">
                            <a asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-outline-danger w-100"
                               onclick="return confirm('Bạn có chắc chắn muốn xoá sản phẩm này?')">
                                <i class="fas fa-trash me-2"></i>
                                Xoá sản phẩm
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    string GetColorCode(string colorName)
    {
        if (string.IsNullOrEmpty(colorName)) return "#6c757d";
        
        var colors = new Dictionary<string, string>(StringComparer.OrdinalIgnoreCase)
        {
            { "??", "#dc3545" }, { "red", "#dc3545" },
            { "xanh", "#0d6efd" }, { "blue", "#0d6efd" },
            { "vàng", "#ffc107" }, { "yellow", "#ffc107" },
            { "xanh lá", "#198754" }, { "green", "#198754" },
            { "cam", "#fd7e14" }, { "orange", "#fd7e14" },
            { "tím", "#6f42c1" }, { "purple", "#6f42c1" },
            { "h?ng", "#e91e63" }, { "pink", "#e91e63" },
            { "?en", "#212529" }, { "black", "#212529" },
            { "tr?ng", "#f8f9fa" }, { "white", "#f8f9fa" },
            { "xám", "#6c757d" }, { "gray", "#6c757d" }, { "grey", "#6c757d" },
            { "nâu", "#795548" }, { "brown", "#795548" }
        };
        
        return colors.ContainsKey(colorName) ? colors[colorName] : "#6c757d";
    }
}

@section Styles {
    <style>
        .page-header {
            background: linear-gradient(135deg, #007bff 0%, #6610f2 100%);
        }
        
        .info-label {
            font-weight: 600;
            color: #495057;
            display: block;
            margin-bottom: 0.25rem;
        }
        
        .info-value {
            color: #212529;
        }
        
        .stat-card {
            transition: transform 0.2s ease-in-out;
        }
        
        .stat-card:hover {
            transform: translateY(-2px);
        }
        
        .stat-number {
            font-size: 1.75rem;
            font-weight: 700;
            margin-bottom: 0.25rem;
        }
        
        .stat-label {
            font-size: 0.875rem;
            opacity: 0.9;
        }
        
        .variant-image {
            border: 2px solid #e9ecef;
        }
        
        .variant-placeholder {
            border: 2px dashed #dee2e6;
        }
        
        .color-badge {
            display: inline-flex;
            align-items: center;
        }
        
        .empty-state i {
            opacity: 0.3;
        }
        
        .table th {
            font-weight: 600;
            border-bottom: 2px solid #dee2e6;
        }
        
        .card {
            box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
        }
        
        .btn-group .btn {
            border: 1px solid #dee2e6;
        }
        
        /* Enhanced Variant Styles */
        .variant-selection-demo {
            background: rgba(0, 123, 255, 0.05);
            border-left: 4px solid #007bff;
        }
        
        .customer-view-demo {
            max-width: 600px;
        }
        
        .price-range-text {
            font-size: 1.25rem;
            font-weight: 600;
            color: #28a745;
        }
        
        .price-single {
            font-size: 1.5rem;
            font-weight: 700;
            color: #28a745;
        }
        
        .variant-label {
            font-weight: 600;
            margin-bottom: 0.5rem;
            display: block;
        }
        
        .color-option {
            display: flex;
            flex-direction: column;
            align-items: center;
            padding: 0.5rem;
            border: 2px solid #dee2e6;
            border-radius: 0.5rem;
            cursor: pointer;
            transition: all 0.3s ease;
            min-width: 80px;
        }
        
        .color-option:hover {
            border-color: #007bff;
            transform: translateY(-2px);
        }
        
        .color-option.selected {
            border-color: #28a745;
            background: rgba(40, 167, 69, 0.1);
        }
        
        .color-swatch {
            width: 30px;
            height: 30px;
            border-radius: 50%;
            border: 2px solid #fff;
            box-shadow: 0 0 0 1px rgba(0,0,0,0.1);
            margin-bottom: 0.25rem;
        }
        
        .color-name {
            font-size: 0.875rem;
            font-weight: 500;
        }
        
        .color-count {
            font-size: 0.75rem;
            color: #6c757d;
        }
        
        .size-option {
            padding: 0.5rem 1rem;
            border: 2px solid #dee2e6;
            border-radius: 0.375rem;
            cursor: pointer;
            transition: all 0.3s ease;
            text-align: center;
            min-width: 60px;
        }
        
        .size-option:hover:not(.out-of-stock) {
            border-color: #007bff;
            background: rgba(0, 123, 255, 0.1);
        }
        
        .size-option.selected {
            border-color: #28a745;
            background: rgba(40, 167, 69, 0.1);
        }
        
        .size-option.out-of-stock {
            opacity: 0.5;
            cursor: not-allowed;
            text-decoration: line-through;
        }
        
        .variant-analysis {
            border-top: 1px solid #dee2e6;
        }
        
        .analysis-item {
            display: flex;
            align-items: center;
            margin-bottom: 0.25rem;
            font-size: 0.875rem;
        }
        
        .color-dot {
            width: 12px;
            height: 12px;
            border-radius: 50%;
            margin-right: 0.5rem;
            border: 1px solid rgba(0,0,0,0.1);
        }
        
        .price-info {
            display: flex;
            flex-direction: column;
            align-items: flex-start;
        }
        
        @@media (max-width: 768px) {
            .page-header .page-actions {
                margin-top: 1rem;
            }
            
            .stat-card {
                margin-bottom: 1rem;
            }
            
            .card-actions {
                margin-top: 1rem;
            }
            
            .color-options, .size-options {
                justify-content: flex-start;
            }
            
            .customer-view-demo {
                max-width: 100%;
            }
        }
    </style>
}

@section Scripts {
    <script>
        function exportProduct() {
            // Export functionality can be implemented here
            alert('Tính năng xuất dữ liệu sẽ được phát triển trong tương lai');
        }

        // Auto-hide success messages after 5 seconds
        setTimeout(function() {
            const alerts = document.querySelectorAll('.alert-success');
            alerts.forEach(function(alert) {
                const bsAlert = new bootstrap.Alert(alert);
                bsAlert.close();
            });
        }, 5000);
    </script>
}