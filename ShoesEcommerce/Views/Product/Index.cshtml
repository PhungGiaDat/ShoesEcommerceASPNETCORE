@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@model List<ShoesEcommerce.Models.Products.Product>
@{
    ViewData["Title"] = ViewData["Title"] ?? "Sản phẩm";
}

<div class="container-fluid">
    <div class="row mb-4">
        <div class="col-12">
            <h2 class="text-center my-4">@ViewData["Title"]</h2>
            
            @* Filter và Search Bar *@
            <form method="get" asp-action="Index">
                <div class="row mb-4">
                    <div class="col-md-4">
                        <div class="input-group">
                            <input type="text" class="form-control" placeholder="Tìm kiếm sản phẩm..." 
                                   name="searchString" value="@ViewData["CurrentFilter"]">
                            <button class="btn btn-outline-secondary" type="submit">
                                <i class="fas fa-search"></i>
                            </button>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <select class="form-select" name="categoryId" onchange="this.form.submit()">
                            <option value="">Tất cả danh mục</option>
                            @if (ViewBag.Categories != null)
                            {
                                var selectedCategoryId = ViewData["CategoryFilter"]?.ToString();
                                @foreach (var category in ViewBag.Categories)
                                {
                                    @if (category.Id.ToString() == selectedCategoryId)
                                    {
                                        <option value="@category.Id" selected>@category.Name</option>
                                    }
                                    else
                                    {
                                        <option value="@category.Id">@category.Name</option>
                                    }
                                }
                            }
                        </select>
                    </div>
                    <div class="col-md-3">
                        <select class="form-select" name="brandId" onchange="this.form.submit()">
                            <option value="">Tất cả thương hiệu</option>
                            @if (ViewBag.Brands != null)
                            {
                                var selectedBrandId = ViewData["BrandFilter"]?.ToString();
                                @foreach (var brand in ViewBag.Brands)
                                {
                                    @if (brand.Id.ToString() == selectedBrandId)
                                    {
                                        <option value="@brand.Id" selected>@brand.Name</option>
                                    }
                                    else
                                    {
                                        <option value="@brand.Id">@brand.Name</option>
                                    }
                                }
                            }
                        </select>
                    </div>
                    <div class="col-md-2">
                        <a href="@Url.Action("Index")" class="btn btn-secondary w-100">
                            <i class="fas fa-undo"></i> Reset
                        </a>
                    </div>
                </div>
                
                @* Hidden fields to maintain other filter values *@
                @if (ViewData["CurrentFilter"] != null)
                {
                    <input type="hidden" name="searchString" value="@ViewData["CurrentFilter"]" />
                }
            </form>
        </div>
    </div>

    @if (Model != null && Model.Any())
    {
        @* Results info and Create button *@
        <div class="row mb-3">
            <div class="col-md-6">
                <p class="text-muted">
                    Hiển thị @Model.Count() sản phẩm
                    @if (ViewBag.TotalItems != null)
                    {
                        <span> trong tổng số @ViewBag.TotalItems sản phẩm</span>
                    }
                </p>
            </div>
            <div class="col-md-6 text-end">
                <a href="@Url.Action("Create", "Product")" class="btn btn-success">
                    <i class="fas fa-plus"></i> Thêm sản phẩm mới
                </a>
            </div>
        </div>

        <div class="row" id="productContainer">
            @foreach (var product in Model)
            {
                <div class="col-lg-3 col-md-4 col-sm-6 mb-4 product-item">
                    <div class="card h-100 shadow-sm product-card">
                        @* Product Image *@
                        <div class="position-relative">
                            <img src="@(string.IsNullOrEmpty(product.ImageUrl) ? "/images/no-image.jpg" : product.ImageUrl)" 
                                 class="card-img-top" 
                                 alt="@product.Name" 
                                 style="height: 250px; object-fit: cover;"
                                 onerror="this.src='/images/no-image.jpg'" />
                            
                            @* Price Badge *@
                            <div class="position-absolute top-0 end-0 m-2">
                                <span class="badge bg-primary fs-6">
                                    @product.Price.ToString("C0", new System.Globalization.CultureInfo("vi-VN"))
                                </span>
                            </div>
                        </div>

                        <div class="card-body d-flex flex-column">
                            @* Product Name *@
                            <h5 class="card-title text-truncate" title="@product.Name">@product.Name</h5>
                            
                            @* Brand and Category *@
                            <div class="mb-2">
                                @if (product.Brand != null)
                                {
                                    <span class="badge bg-light text-dark me-1">
                                        <i class="fas fa-tag"></i> @product.Brand.Name
                                    </span>
                                }
                                @if (product.Category != null)
                                {
                                    <span class="badge bg-light text-dark">
                                        <i class="fas fa-layer-group"></i> @product.Category.Name
                                    </span>
                                }
                            </div>

                            @* Product Description *@
                            @if (!string.IsNullOrEmpty(product.Description))
                            {
                                <p class="card-text text-muted small flex-grow-1">
                                    @(product.Description.Length > 80 ? product.Description.Substring(0, 80) + "..." : product.Description)
                                </p>
                            }

                            @* Variants Info *@
                            @if (product.Variants != null && product.Variants.Any())
                            {
                                <div class="mb-2">
                                    <small class="text-muted">
                                        <i class="fas fa-palette"></i> @product.Variants.Select(v => v.Color).Distinct().Count() màu |
                                        <i class="fas fa-ruler"></i> @product.Variants.Select(v => v.Size).Distinct().Count() size
                                    </small>
                                </div>
                            }

                            @* Action buttons *@
                            <div class="mt-auto">
                                <div class="d-grid gap-2">
                                    <a href="@Url.Action("Details", "Product", new { id = product.Id })" 
                                       class="btn btn-outline-primary btn-sm">
                                        <i class="fas fa-eye"></i> Xem chi tiết
                                    </a>
                                    <div class="btn-group" role="group">
                                        <a href="@Url.Action("Edit", "Product", new { id = product.Id })" 
                                           class="btn btn-outline-warning btn-sm">
                                            <i class="fas fa-edit"></i> Sửa
                                        </a>
                                        <a href="@Url.Action("Delete", "Product", new { id = product.Id })" 
                                           class="btn btn-outline-danger btn-sm">
                                            <i class="fas fa-trash"></i> Xóa
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        @* Pagination *@
        @if (ViewBag.TotalPages != null && ViewBag.TotalPages > 1)
        {
            <div class="row mt-4">
                <div class="col-12">
                    <nav aria-label="Product pagination">
                        <ul class="pagination justify-content-center">
                            @{
                                var currentPage = ViewBag.CurrentPage ?? 1;
                                var totalPages = ViewBag.TotalPages ?? 1;
                                var searchString = ViewData["CurrentFilter"]?.ToString();
                                var categoryFilter = ViewData["CategoryFilter"]?.ToString();
                                var brandFilter = ViewData["BrandFilter"]?.ToString();
                            }

                            @* Previous button *@
                            <li class="page-item @(currentPage <= 1 ? "disabled" : "")">
                                <a class="page-link" 
                                   href="@Url.Action("Index", new { 
                                       page = currentPage - 1, 
                                       searchString = searchString,
                                       categoryId = categoryFilter,
                                       brandId = brandFilter 
                                   })" 
                                   tabindex="@(currentPage <= 1 ? "-1" : "")">
                                    <i class="fas fa-chevron-left"></i> Trước
                                </a>
                            </li>

                            @* Page numbers *@
                            @for (int i = Math.Max(1, currentPage - 2); i <= Math.Min(totalPages, currentPage + 2); i++)
                            {
                                <li class="page-item @(i == currentPage ? "active" : "")">
                                    <a class="page-link" 
                                       href="@Url.Action("Index", new { 
                                           page = i, 
                                           searchString = searchString,
                                           categoryId = categoryFilter,
                                           brandId = brandFilter 
                                       })">
                                        @i
                                    </a>
                                </li>
                            }

                            @* Next button *@
                            <li class="page-item @(currentPage >= totalPages ? "disabled" : "")">
                                <a class="page-link" 
                                   href="@Url.Action("Index", new { 
                                       page = currentPage + 1, 
                                       searchString = searchString,
                                       categoryId = categoryFilter,
                                       brandId = brandFilter 
                                   })">
                                    Sau <i class="fas fa-chevron-right"></i>
                                </a>
                            </li>
                        </ul>
                    </nav>

                    @* Pagination info *@
                    <div class="text-center mt-2">
                        <small class="text-muted">
                            Trang @currentPage của @totalPages
                            (@ViewBag.TotalItems sản phẩm)
                        </small>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <div class="text-center my-5">
            <div class="mb-4">
                <i class="fas fa-box-open fa-5x text-muted"></i>
            </div>
            <h4 class="text-muted">
                @if (!string.IsNullOrEmpty(ViewData["CurrentFilter"]?.ToString()) || 
                     !string.IsNullOrEmpty(ViewData["CategoryFilter"]?.ToString()) || 
                     !string.IsNullOrEmpty(ViewData["BrandFilter"]?.ToString()))
                {
                    <span>Không tìm thấy sản phẩm nào</span>
                }
                else
                {
                    <span>Chưa có sản phẩm nào</span>
                }
            </h4>
            <p class="text-muted">
                @if (!string.IsNullOrEmpty(ViewData["CurrentFilter"]?.ToString()) || 
                     !string.IsNullOrEmpty(ViewData["CategoryFilter"]?.ToString()) || 
                     !string.IsNullOrEmpty(ViewData["BrandFilter"]?.ToString()))
                {
                    <span>Hãy thử thay đổi bộ lọc hoặc từ khóa tìm kiếm!</span>
                    <br />
                    <a href="@Url.Action("Index")" class="btn btn-outline-primary mt-2">
                        <i class="fas fa-undo"></i> Xóa bộ lọc
                    </a>
                }
                else
                {
                    <span>Hãy thêm sản phẩm đầu tiên vào cửa hàng của bạn!</span>
                }
            </p>
            @if (string.IsNullOrEmpty(ViewData["CurrentFilter"]?.ToString()) && 
                 string.IsNullOrEmpty(ViewData["CategoryFilter"]?.ToString()) && 
                 string.IsNullOrEmpty(ViewData["BrandFilter"]?.ToString()))
            {
                <a href="@Url.Action("Create", "Product")" class="btn btn-primary">
                    <i class="fas fa-plus"></i> Thêm sản phẩm mới
                </a>
            }
        </div>
    }
</div>

@* Success/Error Messages *@
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show position-fixed" style="top: 20px; right: 20px; z-index: 1050;" role="alert">
        <i class="fas fa-check-circle"></i> @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show position-fixed" style="top: 20px; right: 20px; z-index: 1050;" role="alert">
        <i class="fas fa-exclamation-circle"></i> @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@* Custom CSS *@
<style>
    .product-card {
        transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
    }
    
    .product-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 4px 15px rgba(0,0,0,0.1) !important;
    }
    
    .card-title {
        font-size: 1.1rem;
        font-weight: 600;
    }
    
    .badge {
        font-size: 0.75em;
    }
    
    .add-to-cart:hover {
        transform: scale(1.02);
    }
</style>

@* JavaScript for enhanced functionality *@
<script>
document.addEventListener('DOMContentLoaded', function() {
    // Auto-dismiss alerts after 5 seconds
    setTimeout(function() {
        var alerts = document.querySelectorAll('.alert');
        alerts.forEach(function(alert) {
            var bsAlert = new bootstrap.Alert(alert);
            bsAlert.close();
        });
    }, 5000);

    // Confirm delete actions
    document.querySelectorAll('a[href*="/Delete/"]').forEach(function(deleteLink) {
        deleteLink.addEventListener('click', function(e) {
            if (!confirm('Bạn có chắc chắn muốn xóa sản phẩm này không?')) {
                e.preventDefault();
            }
        });
    });

    // Loading state for form submissions
    document.querySelectorAll('form').forEach(function(form) {
        form.addEventListener('submit', function() {
            var submitBtn = form.querySelector('button[type="submit"]');
            if (submitBtn) {
                submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Đang tìm...';
                submitBtn.disabled = true;
            }
        });
    });

    // Smooth scroll to top when pagination
    document.querySelectorAll('.pagination a').forEach(function(link) {
        link.addEventListener('click', function() {
            window.scrollTo({ top: 0, behavior: 'smooth' });
        });
    });
});
</script>